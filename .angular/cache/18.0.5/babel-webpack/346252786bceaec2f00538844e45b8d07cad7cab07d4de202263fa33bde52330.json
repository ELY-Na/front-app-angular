{"ast":null,"code":"import { Subscription, take } from 'rxjs';\nimport { Chart } from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/olympic.service\";\nimport * as i2 from \"@angular/router\";\nconst _c0 = [\"myChart\"];\nexport class ChartComponent {\n  constructor(olympicService, router) {\n    this.olympicService = olympicService;\n    this.router = router;\n    // Stocker l'abonnement\n    this.subscription = new Subscription();\n  } // Ajout de l'injection\n  ngOnInit() {\n    this.olympicService.getOlympicData().pipe(take(1)).subscribe(({\n      labels,\n      data\n    }) => {\n      console.log('create chart');\n      this.createChart(labels, data); // Passe les données au graphique\n    });\n  }\n  // Chart home page\n  createChart(labels, values) {\n    const sizeChart = Math.max(10, window.innerWidth * 0.016);\n    if (!this.myChart || !this.myChart.nativeElement) {\n      console.error(\"⚠️ Erreur: `myChart` est undefined !\");\n    } else {\n      console.log('else part', this.myChart.nativeElement);\n    }\n    this.chart = new Chart(this.myChart.nativeElement, {\n      type: 'pie',\n      // this.chartType as ChartType\n      data: {\n        labels: labels,\n        // Utilisation des labels dynamiques\n        datasets: [{\n          label: 'Medal per country',\n          data: values,\n          // Utilisation des valeurs dynamiques\n          borderWidth: 1,\n          backgroundColor: ['red', 'blue', 'yellow', 'green', 'purple']\n        }]\n      },\n      options: {\n        onClick: (event, elements) => {\n          debugger;\n          if (elements.length > 0) {\n            // Vérifie s'il y a un élément cliqué\n            const index = elements[0].index;\n            console.log(\"Index cliqué:\", index);\n            console.log(\"Label:\", labels[index]);\n            console.log(\"Valeur:\", values[index]);\n          } else {\n            console.log(\"Aucun élément sélectionné\");\n          }\n        },\n        responsive: true,\n        layout: {\n          padding: 20\n        },\n        plugins: {\n          legend: {\n            labels: {\n              font: {\n                // size: sizeChart,\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n  // onChartClick(event: MouseEvent): void {\n  //   const chart = (event.target as HTMLCanvasElement).getContext('2d')?.chart;\n  //   const activePoints = chart?.getElementsAtEventForMode(event, 'nearest', { intersect: true }, false);\n  //   if (activePoints && activePoints.length > 0) {\n  //     const countryIndex = activePoints[0].index;  // L'index du pays cliqué dans le graphique\n  //     const countryId = this.countries[countryIndex].id;  // Récupérer l'ID du pays\n  //     // Rediriger vers la page de détails du pays\n  //     this.router.navigate([`/country/${countryId}`]);\n  //   }\n  // }\n  ngOnDestroy() {\n    this.subscription.unsubscribe(); // Désabonnement propre\n    console.log('ChartComponent détruit, abonnement nettoyé.');\n  }\n  static #_ = this.ɵfac = function ChartComponent_Factory(t) {\n    return new (t || ChartComponent)(i0.ɵɵdirectiveInject(i1.OlympicService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChartComponent,\n    selectors: [[\"app-chart\"]],\n    viewQuery: function ChartComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myChart = _t.first);\n      }\n    },\n    inputs: {\n      participations: \"participations\"\n    },\n    decls: 3,\n    vars: 0,\n    consts: [[\"myChart\", \"\"], [2, \"height\", \"40vh\", \"width\", \"40vw\"]],\n    template: function ChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"canvas\", 1, 0);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"div[_ngcontent-%COMP%] {\\n  padding: 30px;\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n@media (max-width: 767px) {\\n  .col-sm-4[_ngcontent-%COMP%] {\\n    width: 100%;\\n    text-align: center;\\n    font-size: 14px;\\n  }\\n  canvas[_ngcontent-%COMP%] {\\n    justify-content: center;\\n    width: 500px !important;\\n    height: 500px !important;\\n    font-size: 14px !important;\\n  }\\n}\\n@media (min-width: 768px) and (max-width: 1024px) {\\n  .col-sm-4[_ngcontent-%COMP%] {\\n    width: 80%;\\n    font-size: 16px;\\n  }\\n  canvas[_ngcontent-%COMP%] {\\n    justify-content: center;\\n    width: 600px !important;\\n    height: 600px !important;\\n    font-size: 16px !important;\\n  }\\n}\\n@media (min-width: 1025px) {\\n  .col-sm-4[_ngcontent-%COMP%] {\\n    width: 50%;\\n    font-size: 18px;\\n  }\\n  canvas[_ngcontent-%COMP%] {\\n    justify-content: center;\\n    width: 800px !important;\\n    height: 800px !important;\\n    font-size: 18px !important;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvY2hhcnQvY2hhcnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLFdBQUE7SUFDQSxrQkFBQTtJQUNBLGVBQUE7RUFDRjtFQUVBO0lBQ0UsdUJBQUE7SUFDQSx1QkFBQTtJQUNBLHdCQUFBO0lBQ0EsMEJBQUE7RUFBRjtBQUNGO0FBR0E7RUFDRTtJQUNFLFVBQUE7SUFDQSxlQUFBO0VBREY7RUFJQTtJQUNFLHVCQUFBO0lBQ0EsdUJBQUE7SUFDQSx3QkFBQTtJQUNBLDBCQUFBO0VBRkY7QUFDRjtBQU1BO0VBQ0U7SUFDRSxVQUFBO0lBQ0EsZUFBQTtFQUpGO0VBT0E7SUFDRSx1QkFBQTtJQUNBLHVCQUFBO0lBQ0Esd0JBQUE7SUFDQSwwQkFBQTtFQUxGO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJkaXYge1xuICBwYWRkaW5nOiAzMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5jb2wtc20tNCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgfVxuXG4gIGNhbnZhcyB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgd2lkdGg6IDUwMHB4ICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiA1MDBweCAhaW1wb3J0YW50O1xuICAgIGZvbnQtc2l6ZTogMTRweCAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuY29sLXNtLTQge1xuICAgIHdpZHRoOiA4MCU7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICB9XG5cbiAgY2FudmFzIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB3aWR0aDogNjAwcHggIWltcG9ydGFudDtcbiAgICBoZWlnaHQ6IDYwMHB4ICFpbXBvcnRhbnQ7XG4gICAgZm9udC1zaXplOiAxNnB4ICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gIC5jb2wtc20tNCB7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gIH1cblxuICBjYW52YXMge1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHdpZHRoOiA4MDBweCAhaW1wb3J0YW50O1xuICAgIGhlaWdodDogODAwcHggIWltcG9ydGFudDtcbiAgICBmb250LXNpemU6IDE4cHggIWltcG9ydGFudDtcbiAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Subscription","take","Chart","ChartComponent","constructor","olympicService","router","subscription","ngOnInit","getOlympicData","pipe","subscribe","labels","data","console","log","createChart","values","sizeChart","Math","max","window","innerWidth","myChart","nativeElement","error","chart","type","datasets","label","borderWidth","backgroundColor","options","onClick","event","elements","length","index","responsive","layout","padding","plugins","legend","font","ngOnDestroy","unsubscribe","_","i0","ɵɵdirectiveInject","i1","OlympicService","i2","Router","_2","selectors","viewQuery","ChartComponent_Query","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd"],"sources":["/Users/elyouzghinajia/devpment/OC/front-app-angular/src/app/pages/chart/chart.component.ts","/Users/elyouzghinajia/devpment/OC/front-app-angular/src/app/pages/chart/chart.component.html"],"sourcesContent":["import { Component, OnInit, ElementRef, ViewChild, OnDestroy, Input } from '@angular/core';\nimport { Subscription, take } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { OlympicService } from '../../core/services/olympic.service'; // Import du service\nimport { Chart } from 'chart.js/auto';\n\n@Component({ // Création du component\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrl: './chart.component.scss'\n})\n\nexport class ChartComponent implements OnInit, OnDestroy {\n  // Médaille par année\n  @Input() participations!: { year: number; medalsCount: number }[]; \n  // Stocker l'abonnement\n  private subscription: Subscription = new Subscription(); \n\n  // Utilisation de ViewChild plus performant que getElementById\n  @ViewChild('myChart') myChart!: ElementRef<HTMLCanvasElement>; // Sélectionne l’élément HTML <canvas> avec l’ID #myChart\n\n  constructor(private olympicService: OlympicService, private router: Router) {} // Ajout de l'injection\n\n  private chart!: Chart; // Stocke l’objet Chart.js pour pouvoir le manipuler\n\n  ngOnInit() {\n    this.olympicService.getOlympicData().pipe(take(1)).subscribe(({ labels, data }) => {\n      console.log('create chart')\n      this.createChart(labels, data); // Passe les données au graphique\n    });\n  }\n\n  // Chart home page\n  createChart(labels: string[], values: number[]) {\n    const sizeChart = Math.max(10, window.innerWidth * 0.016)\n    if (!this.myChart || !this.myChart.nativeElement) {\n      console.error(\"⚠️ Erreur: `myChart` est undefined !\");\n    } else {\n      console.log('else part',this.myChart.nativeElement)\n    }\n    this.chart = new Chart(this.myChart.nativeElement, {\n      type: 'pie',  // this.chartType as ChartType\n      data: {\n        labels: labels, // Utilisation des labels dynamiques\n        datasets: [{\n          label: 'Medal per country',\n          data: values, // Utilisation des valeurs dynamiques\n          borderWidth: 1,\n          backgroundColor: ['red', 'blue', 'yellow', 'green', 'purple']\n        }]\n      },\n      options: {\n        onClick: (event, elements) => {\n          debugger\n          if (elements.length > 0) { // Vérifie s'il y a un élément cliqué\n            const index = elements[0].index;\n            console.log(\"Index cliqué:\", index);\n            console.log(\"Label:\", labels[index]);\n            console.log(\"Valeur:\", values[index]);\n          } else {\n            console.log(\"Aucun élément sélectionné\");\n          }\n        },\n        responsive: true,\n        layout: {\n          padding: 20\n        },\n        plugins: {\n          legend: {\n            labels: {\n              font: {\n                // size: sizeChart,\n              }\n            }\n          }\n        },\n      }\n    })\n  };\n\n  // onChartClick(event: MouseEvent): void {\n  //   const chart = (event.target as HTMLCanvasElement).getContext('2d')?.chart;\n  //   const activePoints = chart?.getElementsAtEventForMode(event, 'nearest', { intersect: true }, false);\n\n  //   if (activePoints && activePoints.length > 0) {\n  //     const countryIndex = activePoints[0].index;  // L'index du pays cliqué dans le graphique\n  //     const countryId = this.countries[countryIndex].id;  // Récupérer l'ID du pays\n\n  //     // Rediriger vers la page de détails du pays\n  //     this.router.navigate([`/country/${countryId}`]);\n  //   }\n  // }\n\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe(); // Désabonnement propre\n    console.log('ChartComponent détruit, abonnement nettoyé.');\n  }\n}\n","<div>\n  <canvas style=\"height:40vh; width:40vw;\" #myChart></canvas>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}