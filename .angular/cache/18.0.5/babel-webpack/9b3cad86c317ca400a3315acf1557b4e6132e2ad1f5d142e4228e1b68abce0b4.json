{"ast":null,"code":"import { Subscription } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/olympic.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction CountryDetailsComponent_div_4_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const participation_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" Medals: \", participation_r1.medalsCount, \" \");\n  }\n}\nfunction CountryDetailsComponent_div_4_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const participation_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" Medals: \", participation_r2.medalsCount, \" \");\n  }\n}\nfunction CountryDetailsComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Total of medals:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"ul\");\n    i0.ɵɵtemplate(6, CountryDetailsComponent_div_4_li_6_Template, 2, 1, \"li\", 4)(7, CountryDetailsComponent_div_4_li_7_Template, 2, 1, \"li\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const country_r3 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Country: \", country_r3.country, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", country_r3.participations);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", country_r3.participations);\n  }\n}\nfunction CountryDetailsComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const nbAthlete_r4 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Total number of athletes: \", nbAthlete_r4, \"\");\n  }\n}\nfunction CountryDetailsComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const nbMedals_r5 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Total number of athletes: \", nbMedals_r5, \"\");\n  }\n}\nexport class CountryDetailsComponent {\n  constructor(olympicService, route, router) {\n    this.olympicService = olympicService;\n    this.route = route;\n    this.router = router;\n    // Stocker l'abonnement\n    this.subscription = new Subscription();\n  }\n  ngOnInit() {\n    this.olympicService.getNumberOfParticipations().subscribe(numberOfEntries => {\n      this.numberOfEntries = numberOfEntries;\n      console.log(`Nb de participations : ${numberOfEntries}`);\n    });\n    // Récupère l'id via la route et le transforme en number\n    this.countryId = Number(this.route.snapshot.params['id']);\n    // Charger les détails du pays\n    this.countryDetails$ = this.olympicService.getOlympicById(this.countryId).pipe(catchError(() => {\n      this.router.navigate(['/404']); // Redirection en cas d'erreur\n      return [];\n    }));\n    // Charge les détails du pays\n    // this.countryDetails$ = this.olympicService.getOlympicById(this.countryId).pipe(\n    //   tap(country => {\n    //     if (!country) {\n    //       this.router.navigate(['/404']); // Redirection si l'ID est introuvable\n    //     }\n    //   })\n    // );\n    // Calculer le nombre total d'athlètes par pays\n    this.numberOfAthletes$ = this.countryDetails$.pipe(map(country => country ? country.participations.reduce((sum, participation) => sum + participation.athleteCount, 0) : 0));\n    // Calculer le nombre total de medailles par pays\n    this.numberOfMedals$ = this.countryDetails$.pipe(map(country => country ? country.participations.reduce((sum, participation) => sum + participation.medalsCount, 0) : 0));\n    // \n    // this.olympicService.getNumberOfAtheles(this.countryDetails$!).subscribe((numberOfAthletes: number) => {\n    //   console.log('ffffffffffffffffff')\n    //   console.log('ffffffffffffffffff')\n    //   console.log(this.countryDetails$!)\n    //   console.log('ffffffffffffffffff')\n    //   this.numberOfAthletes = numberOfAthletes;\n    //   console.log(`Nb de numberOfAthletes : ${numberOfAthletes}`);\n    // });\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe(); // Désabonnement\n    console.log('CountryDetailsComponent détruit, abonnement nettoyé.');\n  }\n  static #_ = this.ɵfac = function CountryDetailsComponent_Factory(t) {\n    return new (t || CountryDetailsComponent)(i0.ɵɵdirectiveInject(i1.OlympicService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CountryDetailsComponent,\n    selectors: [[\"app-country-details\"]],\n    decls: 14,\n    vars: 10,\n    consts: [[1, \"relative\", \"text-white\", \"h-screen\", \"flex\", \"items-center\", \"justify-center\", \"bg-cover\", \"bg-center\", \"col-sm-12\"], [1, \"bg-black\", \"bg-opacity-50\", \"p-8\", \"rounded-lg\", \"max-w-3xl\", \"w-full\", \"text-center\", \"flex\", \"flex-col\", \"items-center\"], [1, \"text-2xl\", \"font-bold\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function CountryDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"Medals per Countries\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, CountryDetailsComponent_div_4_Template, 8, 3, \"div\", 3);\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵelementStart(6, \"div\")(7, \"p\");\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(9, CountryDetailsComponent_div_9_Template, 3, 1, \"div\", 3);\n        i0.ɵɵpipe(10, \"async\");\n        i0.ɵɵtemplate(11, CountryDetailsComponent_div_11_Template, 3, 1, \"div\", 3);\n        i0.ɵɵpipe(12, \"async\");\n        i0.ɵɵelement(13, \"p\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(5, 4, ctx.countryDetails$));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Number of Entries: \", ctx.numberOfEntries, \"\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(10, 6, ctx.numberOfAthletes$));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(12, 8, ctx.numberOfMedals$));\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i3.AsyncPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Subscription","catchError","map","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","participation_r1","medalsCount","participation_r2","ɵɵtemplate","CountryDetailsComponent_div_4_li_6_Template","CountryDetailsComponent_div_4_li_7_Template","country_r3","country","ɵɵproperty","participations","nbAthlete_r4","nbMedals_r5","CountryDetailsComponent","constructor","olympicService","route","router","subscription","ngOnInit","getNumberOfParticipations","subscribe","numberOfEntries","console","log","countryId","Number","snapshot","params","countryDetails$","getOlympicById","pipe","navigate","numberOfAthletes$","reduce","sum","participation","athleteCount","numberOfMedals$","ngOnDestroy","unsubscribe","_","ɵɵdirectiveInject","i1","OlympicService","i2","ActivatedRoute","Router","_2","selectors","decls","vars","consts","template","CountryDetailsComponent_Template","rf","ctx","CountryDetailsComponent_div_4_Template","CountryDetailsComponent_div_9_Template","CountryDetailsComponent_div_11_Template","ɵɵelement","ɵɵpipeBind1"],"sources":["/Users/elyouzghinajia/devpment/OC/front-app-angular/src/app/pages/country-details/country-details.component.ts","/Users/elyouzghinajia/devpment/OC/front-app-angular/src/app/pages/country-details/country-details.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy, input } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Olympic } from 'src/app/core/models/Olympic';\nimport { OlympicService } from 'src/app/core/services/olympic.service';\nimport { catchError} from 'rxjs/operators';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-country-details',\n  templateUrl: './country-details.component.html',\n  styleUrl: './country-details.component.scss'\n})\n\nexport class CountryDetailsComponent implements OnInit{\n  public olympics$!: Observable<Olympic[]>;\n  public countryId!: number;\n  public countryDetails$!: Observable<Olympic | undefined>;\n  public numberOfEntries!: number;\n  public numberOfAthletes$!: Observable<number>;\n  public numberOfMedals$!: Observable<number>;\n\n  // Stocker l'abonnement\n  private subscription: Subscription = new Subscription(); \n\n  constructor(private olympicService: OlympicService, private route: ActivatedRoute, private router: Router) {}\n\n  ngOnInit(): void {\n    this.olympicService.getNumberOfParticipations().subscribe((numberOfEntries: number) => {\n      this.numberOfEntries = numberOfEntries;\n      console.log(`Nb de participations : ${numberOfEntries}`);\n    });\n\n    // Récupère l'id via la route et le transforme en number\n    this.countryId = Number(this.route.snapshot.params['id']);\n\n    // Charger les détails du pays\n    this.countryDetails$! = this.olympicService.getOlympicById(this.countryId).pipe(\n      catchError(() => {\n        this.router.navigate(['/404']); // Redirection en cas d'erreur\n        return [];\n      })\n    );\n\n    // Charge les détails du pays\n    // this.countryDetails$ = this.olympicService.getOlympicById(this.countryId).pipe(\n    //   tap(country => {\n    //     if (!country) {\n    //       this.router.navigate(['/404']); // Redirection si l'ID est introuvable\n    //     }\n    //   })\n    // );\n\n    // Calculer le nombre total d'athlètes par pays\n    this.numberOfAthletes$ = this.countryDetails$.pipe(\n      map(country => country ? country.participations.reduce((sum, participation) => sum + participation.athleteCount, 0) : 0)\n    );\n\n    // Calculer le nombre total de medailles par pays\n    this.numberOfMedals$ = this.countryDetails$.pipe(\n      map(country => country ? country.participations.reduce((sum, participation) => sum + participation.medalsCount, 0) : 0)\n    );\n\n    // \n    // this.olympicService.getNumberOfAtheles(this.countryDetails$!).subscribe((numberOfAthletes: number) => {\n    //   console.log('ffffffffffffffffff')\n    //   console.log('ffffffffffffffffff')\n    //   console.log(this.countryDetails$!)\n    //   console.log('ffffffffffffffffff')\n    //   this.numberOfAthletes = numberOfAthletes;\n    //   console.log(`Nb de numberOfAthletes : ${numberOfAthletes}`);\n    // });\n    \n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe(); // Désabonnement\n    console.log('CountryDetailsComponent détruit, abonnement nettoyé.');\n  }\n}\n","<section class=\"relative text-white h-screen flex items-center justify-center bg-cover bg-center col-sm-12\">\n  <div class=\"bg-black bg-opacity-50 p-8 rounded-lg max-w-3xl w-full text-center flex flex-col items-center\">\n    <h1 class=\"text-2xl font-bold\">Medals per Countries</h1>\n    <div *ngIf=\"countryDetails$ | async as country\">\n      <p>Country: {{ country.country }}</p>\n      <p>Total of medals:</p>\n      <ul>\n        <li *ngFor=\"let participation of country.participations\">\n           Medals: {{ participation.medalsCount }}\n        </li>\n          <li *ngFor=\"let participation of country.participations\">\n            Medals: {{ participation.medalsCount }}\n          </li>\n      </ul>\n    </div>\n    <div>\n      <p>Number of Entries: {{ numberOfEntries }}</p>\n    </div>\n    <div *ngIf=\" numberOfAthletes$ | async as nbAthlete\">\n      <p>Total number of athletes: {{ nbAthlete }}</p>\n    </div>\n    <div *ngIf=\" numberOfMedals$ | async as nbMedals \">\n      <p>Total number of athletes: {{ nbMedals }}</p>\n    </div>\n    <p></p>\n  </div>\n</section>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}