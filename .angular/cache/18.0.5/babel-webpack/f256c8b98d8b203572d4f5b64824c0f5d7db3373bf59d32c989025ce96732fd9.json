{"ast":null,"code":"import { Subscription } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/olympic.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction CountryDetailsComponent_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const nbEntries_r1 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Number of Entries: \", nbEntries_r1, \"\");\n  }\n}\nfunction CountryDetailsComponent_div_1_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const nbAthlete_r2 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Total number of athletes: \", nbAthlete_r2, \"\");\n  }\n}\nfunction CountryDetailsComponent_div_1_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const nbMedals_r3 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Total number of medals: \", nbMedals_r3, \"\");\n  }\n}\nfunction CountryDetailsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"h1\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, CountryDetailsComponent_div_1_div_3_Template, 3, 1, \"div\", 4);\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵtemplate(5, CountryDetailsComponent_div_1_div_5_Template, 3, 1, \"div\", 4);\n    i0.ɵɵpipe(6, \"async\");\n    i0.ɵɵtemplate(7, CountryDetailsComponent_div_1_div_7_Template, 3, 1, \"div\", 4);\n    i0.ɵɵpipe(8, \"async\");\n    i0.ɵɵelement(9, \"p\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const country_r4 = ctx.ngIf;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", country_r4.country, \"'s Details\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(4, 4, ctx_r4.numberOfEntriesForCountry$));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(6, 6, ctx_r4.numberOfAthletes$));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(8, 8, ctx_r4.numberOfMedals$));\n  }\n}\nexport class CountryDetailsComponent {\n  constructor(olympicService, route, router) {\n    this.olympicService = olympicService;\n    this.route = route;\n    this.router = router;\n    // Stocker l'abonnement\n    this.subscription = new Subscription();\n  }\n  ngOnInit() {\n    this.olympicService.getNumberOfParticipations().subscribe(numberOfEntries => {\n      this.numberOfEntries = numberOfEntries;\n      console.log(`Nb de participations : ${numberOfEntries}`);\n    });\n    // Récupère l'id via la route et le transforme en number\n    this.countryId = Number(this.route.snapshot.params['id']);\n    // Charger les détails du pays\n    this.countryDetails$ = this.olympicService.getOlympicById(this.countryId).pipe(catchError(() => {\n      this.router.navigate(['/404']); // Redirection en cas d'erreur\n      return [];\n    }));\n    // Charge les détails du pays\n    // this.countryDetails$ = this.olympicService.getOlympicById(this.countryId).pipe(\n    //   tap(country => {\n    //     if (!country) {\n    //       this.router.navigate(['/404']); // Redirection si l'ID est introuvable\n    //     }\n    //   })\n    // );\n    // Calculer le nombre total d'athlètes par pays\n    this.numberOfAthletes$ = this.countryDetails$.pipe(map(country => country ? country.participations.reduce((sum, participation) => sum + participation.athleteCount, 0) : 0));\n    // Calculer le nombre total de medailles par pays\n    this.numberOfMedals$ = this.countryDetails$.pipe(map(country => country ? country.participations.reduce((sum, participation) => sum + participation.medalsCount, 0) : 0));\n    // Calculer le nombre total de medailles par pays\n    this.numberOfEntriesForCountry$ = this.countryDetails$.pipe(map(country => country ? country.participations.length : 0));\n    // \n    // this.olympicService.getNumberOfAtheles(this.countryDetails$!).subscribe((numberOfAthletes: number) => {\n    //   console.log('ffffffffffffffffff')\n    //   console.log('ffffffffffffffffff')\n    //   console.log(this.countryDetails$!)\n    //   console.log('ffffffffffffffffff')\n    //   this.numberOfAthletes = numberOfAthletes;\n    //   console.log(`Nb de numberOfAthletes : ${numberOfAthletes}`);\n    // });\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe(); // Désabonnement\n    console.log('CountryDetailsComponent détruit, abonnement nettoyé.');\n  }\n  static #_ = this.ɵfac = function CountryDetailsComponent_Factory(t) {\n    return new (t || CountryDetailsComponent)(i0.ɵɵdirectiveInject(i1.OlympicService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CountryDetailsComponent,\n    selectors: [[\"app-country-details\"]],\n    decls: 3,\n    vars: 3,\n    consts: [[1, \"relative\", \"text-white\", \"h-screen\", \"flex\", \"items-center\", \"justify-center\", \"bg-cover\", \"bg-center\", \"col-sm-12\"], [\"class\", \"bg-black bg-opacity-50 p-8 rounded-lg max-w-3xl w-full text-center flex flex-col items-center\", 4, \"ngIf\"], [1, \"bg-black\", \"bg-opacity-50\", \"p-8\", \"rounded-lg\", \"max-w-3xl\", \"w-full\", \"text-center\", \"flex\", \"flex-col\", \"items-center\"], [1, \"text-2xl\", \"font-bold\"], [4, \"ngIf\"]],\n    template: function CountryDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0);\n        i0.ɵɵtemplate(1, CountryDetailsComponent_div_1_Template, 10, 10, \"div\", 1);\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx.countryDetails$));\n      }\n    },\n    dependencies: [i3.NgIf, i3.AsyncPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Subscription","catchError","map","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","nbEntries_r1","nbAthlete_r2","nbMedals_r3","ɵɵtemplate","CountryDetailsComponent_div_1_div_3_Template","CountryDetailsComponent_div_1_div_5_Template","CountryDetailsComponent_div_1_div_7_Template","ɵɵelement","country_r4","country","ɵɵproperty","ɵɵpipeBind1","ctx_r4","numberOfEntriesForCountry$","numberOfAthletes$","numberOfMedals$","CountryDetailsComponent","constructor","olympicService","route","router","subscription","ngOnInit","getNumberOfParticipations","subscribe","numberOfEntries","console","log","countryId","Number","snapshot","params","countryDetails$","getOlympicById","pipe","navigate","participations","reduce","sum","participation","athleteCount","medalsCount","length","ngOnDestroy","unsubscribe","_","ɵɵdirectiveInject","i1","OlympicService","i2","ActivatedRoute","Router","_2","selectors","decls","vars","consts","template","CountryDetailsComponent_Template","rf","ctx","CountryDetailsComponent_div_1_Template"],"sources":["/Users/elyouzghinajia/devpment/OC/front-app-angular/src/app/pages/country-details/country-details.component.ts","/Users/elyouzghinajia/devpment/OC/front-app-angular/src/app/pages/country-details/country-details.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy, input } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Olympic } from 'src/app/core/models/Olympic';\nimport { OlympicService } from 'src/app/core/services/olympic.service';\nimport { catchError} from 'rxjs/operators';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-country-details',\n  templateUrl: './country-details.component.html',\n  styleUrl: './country-details.component.scss'\n})\n\nexport class CountryDetailsComponent implements OnInit{\n  public olympics$!: Observable<Olympic[]>;\n  public countryId!: number;\n  public countryDetails$!: Observable<Olympic | undefined>;\n  public numberOfEntries!: number; // pour tous les pays\n  public numberOfAthletes$!: Observable<number>;\n  public numberOfMedals$!: Observable<number>;\n  public numberOfEntriesForCountry$!: Observable<number>; // pour tous les pays\n\n\n  // Stocker l'abonnement\n  private subscription: Subscription = new Subscription(); \n\n  constructor(private olympicService: OlympicService, private route: ActivatedRoute, private router: Router) {}\n\n  ngOnInit(): void {\n    this.olympicService.getNumberOfParticipations().subscribe((numberOfEntries: number) => {\n      this.numberOfEntries = numberOfEntries;\n      console.log(`Nb de participations : ${numberOfEntries}`);\n    });\n\n    // Récupère l'id via la route et le transforme en number\n    this.countryId = Number(this.route.snapshot.params['id']);\n\n    // Charger les détails du pays\n    this.countryDetails$! = this.olympicService.getOlympicById(this.countryId).pipe(\n      catchError(() => {\n        this.router.navigate(['/404']); // Redirection en cas d'erreur\n        return [];\n      })\n    );\n\n    // Charge les détails du pays\n    // this.countryDetails$ = this.olympicService.getOlympicById(this.countryId).pipe(\n    //   tap(country => {\n    //     if (!country) {\n    //       this.router.navigate(['/404']); // Redirection si l'ID est introuvable\n    //     }\n    //   })\n    // );\n\n    // Calculer le nombre total d'athlètes par pays\n    this.numberOfAthletes$ = this.countryDetails$.pipe(\n      map(country => country ? country.participations.reduce((sum, participation) => sum + participation.athleteCount, 0) : 0)\n    );\n\n    // Calculer le nombre total de medailles par pays\n    this.numberOfMedals$ = this.countryDetails$.pipe(\n      map(country => country ? country.participations.reduce((sum, participation) => sum + participation.medalsCount, 0) : 0)\n    );\n\n    // Calculer le nombre total de medailles par pays\n    this.numberOfEntriesForCountry$ = this.countryDetails$.pipe(\n      map(country => country ? country.participations.length : 0)\n    );\n\n    // \n    // this.olympicService.getNumberOfAtheles(this.countryDetails$!).subscribe((numberOfAthletes: number) => {\n    //   console.log('ffffffffffffffffff')\n    //   console.log('ffffffffffffffffff')\n    //   console.log(this.countryDetails$!)\n    //   console.log('ffffffffffffffffff')\n    //   this.numberOfAthletes = numberOfAthletes;\n    //   console.log(`Nb de numberOfAthletes : ${numberOfAthletes}`);\n    // });\n    \n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe(); // Désabonnement\n    console.log('CountryDetailsComponent détruit, abonnement nettoyé.');\n  }\n}\n","<section class=\"relative text-white h-screen flex items-center justify-center bg-cover bg-center col-sm-12\">\n  <div *ngIf=\" countryDetails$ | async as country \" class=\"bg-black bg-opacity-50 p-8 rounded-lg max-w-3xl w-full text-center flex flex-col items-center\">\n    <h1 class=\"text-2xl font-bold\"> {{country.country}}'s Details</h1>\n    <div *ngIf=\" numberOfEntriesForCountry$ | async as nbEntries \">\n      <p>Number of Entries: {{ nbEntries }}</p>\n    </div>\n    <div *ngIf=\" numberOfAthletes$ | async as nbAthlete \">\n      <p>Total number of athletes: {{ nbAthlete }}</p>\n    </div>\n    <div *ngIf=\" numberOfMedals$ | async as nbMedals \">\n      <p>Total number of medals: {{ nbMedals }}</p>\n    </div>\n    <p></p>\n  </div>\n</section>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}