{"ast":null,"code":"import Chart from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"myChart\"];\nexport class ChartComponent {\n  constructor() {\n    // @ViewChild('myChart', { static: false }) myChart!: ElementRef<HTMLCanvasElement>;\n    this.chartType = 'pie'; // Type de graphique (bar, line, pie...)\n  }\n  ngAfterViewInit() {\n    this.chart = new Chart(this.myChart.nativeElement, {\n      type: 'pie',\n      //  Définit un graphique en pie\n      data: {\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n        datasets: [{\n          label: '# of Votes',\n          data: [12, 19, 3, 5, 2, 3],\n          borderWidth: 1,\n          backgroundColor: ['red', 'blue', 'yellow', 'green', 'purple', 'orange']\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n  static #_ = this.ɵfac = function ChartComponent_Factory(t) {\n    return new (t || ChartComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChartComponent,\n    selectors: [[\"app-chart\"]],\n    viewQuery: function ChartComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myChart = _t.first);\n      }\n    },\n    inputs: {\n      chartType: \"chartType\",\n      chartData: \"chartData\",\n      chartOptions: \"chartOptions\"\n    },\n    decls: 5,\n    vars: 0,\n    consts: [[\"myChart\", \"\"]],\n    template: function ChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n        i0.ɵɵtext(2, \"chart works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"canvas\", null, 0);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"div[_ngcontent-%COMP%] {\\n  border: 1px solid red;\\n  padding: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvY2hhcnQvY2hhcnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBQTtFQUNBLGFBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbImRpdiB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcbiAgcGFkZGluZzogMTBweDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Chart","ChartComponent","constructor","chartType","ngAfterViewInit","chart","myChart","nativeElement","type","data","labels","datasets","label","borderWidth","backgroundColor","options","responsive","scales","y","beginAtZero","_","_2","selectors","viewQuery","ChartComponent_Query","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["/Users/elyouzghinajia/devpment/OC/front-app-angular/src/app/pages/chart/chart.component.ts","/Users/elyouzghinajia/devpment/OC/front-app-angular/src/app/pages/chart/chart.component.html"],"sourcesContent":["import { Component, AfterViewInit, ElementRef, ViewChild, Input } from '@angular/core';\nimport Chart from 'chart.js/auto';\n\n@Component({ // Création du component\n  selector: 'app-chart',\n  // standalone: true,\n  // imports: [],\n  templateUrl: './chart.component.html',\n  styleUrl: './chart.component.scss'\n})\n\nexport class ChartComponent implements AfterViewInit {\n  // Utilisation de ViewChild plus performant que getElementById\n  @ViewChild('myChart') myChart!: ElementRef<HTMLCanvasElement>; // Sélectionne l’élément HTML <canvas> avec l’ID #myChart\n  // @ViewChild('myChart', { static: false }) myChart!: ElementRef<HTMLCanvasElement>;\n\n  @Input() chartType: string = 'pie'; // Type de graphique (bar, line, pie...)\n  @Input() chartData: any; // Données dynamiques\n  @Input() chartOptions: any; // Options dynamiques\n\n  chart!: Chart; // Stocke l’objet Chart.js pour pouvoir le manipuler\n\n  ngAfterViewInit() {\n    this.chart = new Chart(this.myChart.nativeElement, { // Creation d'un nouveau chart\n      type: 'pie', //  Définit un graphique en pie\n      data: {\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n        datasets: [{\n          label: '# of Votes',\n          data: [12, 19, 3, 5, 2, 3],\n          borderWidth: 1,\n          backgroundColor: ['red', 'blue', 'yellow', 'green', 'purple', 'orange']\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n}\n","<div>\n  <p>chart works!</p>\n  <canvas #myChart></canvas>\n</div>"],"mappings":"AACA,OAAOA,KAAK,MAAM,eAAe;;;AAUjC,OAAM,MAAOC,cAAc;EAR3BC,YAAA;IAWE;IAES,KAAAC,SAAS,GAAW,KAAK,CAAC,CAAC;;EAMpCC,eAAeA,CAAA;IACb,IAAI,CAACC,KAAK,GAAG,IAAIL,KAAK,CAAC,IAAI,CAACM,OAAO,CAACC,aAAa,EAAE;MACjDC,IAAI,EAAE,KAAK;MAAE;MACbC,IAAI,EAAE;QACJC,MAAM,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC;QAC9DC,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,YAAY;UACnBH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UAC1BI,WAAW,EAAE,CAAC;UACdC,eAAe,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ;SACvE;OACF;MACDC,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE;;;;KAIpB,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAhCUnB,cAAc;EAAA;EAAA,QAAAoB,EAAA,G;UAAdpB,cAAc;IAAAqB,SAAA;IAAAC,SAAA,WAAAC,qBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;;;QCVzBE,EADF,CAAAC,cAAA,UAAK,QACA;QAAAD,EAAA,CAAAE,MAAA,mBAAY;QAAAF,EAAA,CAAAG,YAAA,EAAI;QACnBH,EAAA,CAAAI,SAAA,sBAA0B;QAC5BJ,EAAA,CAAAG,YAAA,EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}