{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst _c0 = [\"myChart\"];\nexport class ChartComponent {\n  constructor() {\n    this.chartType = 'pie'; // Type de graphique (bar, line, pie...)\n  }\n  // loadInitialData\n  ngAfterViewInit() {\n    this.olympicService.getChartData().subscribe(data => {\n      // this.chart = new Chart(this.myChart.nativeElement, { // Creation d'un nouveau chart\n      //   type: this.chartType as any, //  Définit un graphique en pie\n      //   data: {\n      //     labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n      //     datasets: [{\n      //       label: '# of Votes',\n      //       data: [12, 19, 3, 5, 2, 3],\n      //       borderWidth: 1,\n      //       backgroundColor: ['red', 'blue', 'yellow', 'green', 'purple', 'orange']\n      //     }]\n      //   },\n      //   options: {\n      //     responsive: true,\n      //     scales: {\n      //       y: {\n      //         beginAtZero: true\n      //       }\n      //     }\n      //   }\n      // });\n    });\n  }\n  static #_ = this.ɵfac = function ChartComponent_Factory(t) {\n    return new (t || ChartComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChartComponent,\n    selectors: [[\"app-chart\"]],\n    viewQuery: function ChartComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myChart = _t.first);\n      }\n    },\n    inputs: {\n      chartType: \"chartType\",\n      chartData: \"chartData\",\n      chartOptions: \"chartOptions\"\n    },\n    decls: 5,\n    vars: 0,\n    consts: [[\"myChart\", \"\"]],\n    template: function ChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n        i0.ɵɵtext(2, \"chart works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"canvas\", null, 0);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"div[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  display: flex;\\n}\\n\\ncanvas[_ngcontent-%COMP%] {\\n  max-width: 600px;\\n  max-height: 400px;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvY2hhcnQvY2hhcnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsYUFBQTtBQUNGOztBQUVBO0VBQ0UsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLHVCQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJkaXYge1xuICBwYWRkaW5nOiAxMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG5jYW52YXMge1xuICBtYXgtd2lkdGg6IDYwMHB4O1xuICBtYXgtaGVpZ2h0OiA0MDBweDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["ChartComponent","constructor","chartType","ngAfterViewInit","olympicService","getChartData","subscribe","data","_","_2","selectors","viewQuery","ChartComponent_Query","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["/Users/elyouzghinajia/devpment/OC/front-app-angular/src/app/pages/chart/chart.component.ts","/Users/elyouzghinajia/devpment/OC/front-app-angular/src/app/pages/chart/chart.component.html"],"sourcesContent":["import { Component, AfterViewInit, ElementRef, ViewChild, Input } from '@angular/core';\nimport { OlympicService } from '../../core/services/olympic.service'; // Import du service\nimport Chart from 'chart.js/auto';\n\n@Component({ // Création du component\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrl: './chart.component.scss'\n})\n\nexport class ChartComponent implements AfterViewInit {\n  // Utilisation de ViewChild plus performant que getElementById\n  @ViewChild('myChart') myChart!: ElementRef<HTMLCanvasElement>; // Sélectionne l’élément HTML <canvas> avec l’ID #myChart\n\n  @Input() chartType: string = 'pie'; // Type de graphique (bar, line, pie...)\n  @Input() chartData: any; // Données dynamiques\n  @Input() chartOptions: any; // Options dynamiques\n\n  chart!: Chart; // Stocke l’objet Chart.js pour pouvoir le manipuler\n  // loadInitialData\n\n  ngAfterViewInit() {\n    this.olympicService.getChartData().subscribe((data: OlympicData) => {\n    // this.chart = new Chart(this.myChart.nativeElement, { // Creation d'un nouveau chart\n    //   type: this.chartType as any, //  Définit un graphique en pie\n    //   data: {\n    //     labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n    //     datasets: [{\n    //       label: '# of Votes',\n    //       data: [12, 19, 3, 5, 2, 3],\n    //       borderWidth: 1,\n    //       backgroundColor: ['red', 'blue', 'yellow', 'green', 'purple', 'orange']\n    //     }]\n    //   },\n    //   options: {\n    //     responsive: true,\n    //     scales: {\n    //       y: {\n    //         beginAtZero: true\n    //       }\n    //     }\n    //   }\n    // });\n  }\n}\n","<div>\n  <p>chart works!</p>\n  <canvas #myChart></canvas>\n</div>"],"mappings":";;AAUA,OAAM,MAAOA,cAAc;EAN3BC,YAAA;IAUW,KAAAC,SAAS,GAAW,KAAK,CAAC,CAAC;;EAKpC;EAEAC,eAAeA,CAAA;IACb,IAAI,CAACC,cAAc,CAACC,YAAY,EAAE,CAACC,SAAS,CAAEC,IAAiB,IAAI;MACnE;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CACD;EACH;EAAC,QAAAC,CAAA,G;qBAlCYR,cAAc;EAAA;EAAA,QAAAS,EAAA,G;UAAdT,cAAc;IAAAU,SAAA;IAAAC,SAAA,WAAAC,qBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;;;QCTzBE,EADF,CAAAC,cAAA,UAAK,QACA;QAAAD,EAAA,CAAAE,MAAA,mBAAY;QAAAF,EAAA,CAAAG,YAAA,EAAI;QACnBH,EAAA,CAAAI,SAAA,sBAA0B;QAC5BJ,EAAA,CAAAG,YAAA,EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}