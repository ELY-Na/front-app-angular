{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Subscription } from 'rxjs';\nlet CountryDetailsComponent = class CountryDetailsComponent {\n  // constructor(private route: ActivatedRoute, private olympicService: OlympicService) {}\n  constructor(olympicService, route, router) {\n    this.olympicService = olympicService;\n    this.route = route;\n    this.router = router;\n    // Stocker l'abonnement\n    this.subscription = new Subscription();\n  }\n  ngOnInit() {\n    this.olympicService.getNumberOfParticipations().subscribe(numberOfEntries => {\n      this.numberOfEntries = numberOfEntries;\n      console.log(`Nb de participations : ${numberOfEntries}`);\n    });\n    // Récupère l'id via la route et le transforme en number\n    this.countryId = Number(this.route.snapshot.params['id']);\n    // Charger les détails du pays\n    this.countryDetails$ = this.olympicService.getOlympicById(this.countryId);\n  }\n  // this.olympicService.getNumberOfAtheles().subscribe((numberOfAthletes: number) => {\n  //   this.numberOfAthletes = numberOfAthletes;\n  //   console.log(`Nb de participationsfldkjsfkj : ${numberOfAthletes}`);\n  // });\n  ngOnDestroy() {\n    this.subscription.unsubscribe(); // Désabonnement\n    console.log('CountryDetailsComponent détruit, abonnement nettoyé.');\n  }\n};\nCountryDetailsComponent = __decorate([Component({\n  selector: 'app-country-details',\n  templateUrl: './country-details.component.html',\n  styleUrl: './country-details.component.scss'\n})], CountryDetailsComponent);\nexport { CountryDetailsComponent };","map":{"version":3,"names":["Component","Subscription","CountryDetailsComponent","constructor","olympicService","route","router","subscription","ngOnInit","getNumberOfParticipations","subscribe","numberOfEntries","console","log","countryId","Number","snapshot","params","countryDetails$","getOlympicById","ngOnDestroy","unsubscribe","__decorate","selector","templateUrl","styleUrl"],"sources":["/Users/elyouzghinajia/devpment/OC/front-app-angular/src/app/pages/country-details/country-details.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy, input } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Olympic } from 'src/app/core/models/Olympic';\nimport { OlympicService } from 'src/app/core/services/olympic.service';\n\n@Component({\n  selector: 'app-country-details',\n  templateUrl: './country-details.component.html',\n  styleUrl: './country-details.component.scss'\n})\n\nexport class CountryDetailsComponent implements OnInit{\n  public olympics$!: Observable<Olympic[]>;\n  public countryId!: number;\n  public countryDetails$!: Observable<Olympic | undefined>;\n  public numberOfEntries!: number;\n  public numberOfAthletes!: number;\n\n  // Stocker l'abonnement\n  private subscription: Subscription = new Subscription(); \n\n  // constructor(private route: ActivatedRoute, private olympicService: OlympicService) {}\n  constructor(private olympicService: OlympicService, private route: ActivatedRoute, private router: Router) {}\n\n  ngOnInit(): void {\n    this.olympicService.getNumberOfParticipations().subscribe((numberOfEntries: number) => {\n      this.numberOfEntries = numberOfEntries;\n      console.log(`Nb de participations : ${numberOfEntries}`);\n    });\n\n    // Récupère l'id via la route et le transforme en number\n    this.countryId = Number(this.route.snapshot.params['id']); \n    // Charger les détails du pays\n    this.countryDetails$! = this.olympicService.getOlympicById(this.countryId);\n  }\n\n  // this.olympicService.getNumberOfAtheles().subscribe((numberOfAthletes: number) => {\n  //   this.numberOfAthletes = numberOfAthletes;\n  //   console.log(`Nb de participationsfldkjsfkj : ${numberOfAthletes}`);\n  // });\n  \n  ngOnDestroy(): void {\n    this.subscription.unsubscribe(); // Désabonnement\n    console.log('CountryDetailsComponent détruit, abonnement nettoyé.');\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAkC,eAAe;AACnE,SAAqBC,YAAY,QAAQ,MAAM;AAWxC,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAUlC;EACAC,YAAoBC,cAA8B,EAAUC,KAAqB,EAAUC,MAAc;IAArF,KAAAF,cAAc,GAAdA,cAAc;IAA0B,KAAAC,KAAK,GAALA,KAAK;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAJjG;IACQ,KAAAC,YAAY,GAAiB,IAAIN,YAAY,EAAE;EAGqD;EAE5GO,QAAQA,CAAA;IACN,IAAI,CAACJ,cAAc,CAACK,yBAAyB,EAAE,CAACC,SAAS,CAAEC,eAAuB,IAAI;MACpF,IAAI,CAACA,eAAe,GAAGA,eAAe;MACtCC,OAAO,CAACC,GAAG,CAAC,0BAA0BF,eAAe,EAAE,CAAC;IAC1D,CAAC,CAAC;IAEF;IACA,IAAI,CAACG,SAAS,GAAGC,MAAM,CAAC,IAAI,CAACV,KAAK,CAACW,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC,CAAC;IACzD;IACA,IAAI,CAACC,eAAgB,GAAG,IAAI,CAACd,cAAc,CAACe,cAAc,CAAC,IAAI,CAACL,SAAS,CAAC;EAC5E;EAEA;EACA;EACA;EACA;EAEAM,WAAWA,CAAA;IACT,IAAI,CAACb,YAAY,CAACc,WAAW,EAAE,CAAC,CAAC;IACjCT,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;EACrE;CACD;AAlCYX,uBAAuB,GAAAoB,UAAA,EANnCtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,QAAQ,EAAE;CACX,CAAC,C,EAEWvB,uBAAuB,CAkCnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}