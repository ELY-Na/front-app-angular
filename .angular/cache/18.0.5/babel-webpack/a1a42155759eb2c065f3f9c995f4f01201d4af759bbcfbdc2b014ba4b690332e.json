{"ast":null,"code":"import { Subscription } from 'rxjs';\nimport { Chart } from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/olympic.service\";\nexport class CountryChartComponent {\n  // Utilisation de ViewChild plus performant que getElementById\n  // @ViewChild('lineChart') lineChartRef!: ElementRef<HTMLCanvasElement>;\n  constructor(olympicService) {\n    this.olympicService = olympicService;\n    this.subscription = new Subscription();\n  } // Ajout de l'injection\n  ngAfterViewInit() {\n    this.olympicService.getOlympicData().subscribe(({\n      labels,\n      data\n    }) => {\n      this.createCountryChart(labels, data); // Passe les données au graphique\n    });\n  }\n  // Chart Country page\n  createCountryChart(labels, values) {\n    this.lineChart = new Chart(this.lineChartRef.nativeElement, {\n      type: 'line',\n      data: {\n        labels: this.participations.map(p => p.year),\n        datasets: [{\n          label: 'Médailles par année',\n          data: this.participations.map(p => p.medalsCount),\n          borderColor: 'blue',\n          backgroundColor: 'rgba(0, 0, 255, 0.3)',\n          fill: true,\n          tension: 0.4 // Ajoute un effet de courbure\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe(); // Désabonnement propre\n    console.log('ChartComponent détruit, abonnement nettoyé.');\n  }\n  static #_ = this.ɵfac = function CountryChartComponent_Factory(t) {\n    return new (t || CountryChartComponent)(i0.ɵɵdirectiveInject(i1.OlympicService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CountryChartComponent,\n    selectors: [[\"app-country-chart\"]],\n    decls: 2,\n    vars: 0,\n    template: function CountryChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"country-chart works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Subscription","Chart","CountryChartComponent","constructor","olympicService","subscription","ngAfterViewInit","getOlympicData","subscribe","labels","data","createCountryChart","values","lineChart","lineChartRef","nativeElement","type","participations","map","p","year","datasets","label","medalsCount","borderColor","backgroundColor","fill","tension","options","responsive","maintainAspectRatio","ngOnDestroy","unsubscribe","console","log","_","i0","ɵɵdirectiveInject","i1","OlympicService","_2","selectors","decls","vars","template","CountryChartComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["/Users/elyouzghinajia/devpment/OC/front-app-angular/src/app/pages/country-chart/country-chart.component.ts","/Users/elyouzghinajia/devpment/OC/front-app-angular/src/app/pages/country-chart/country-chart.component.html"],"sourcesContent":["import { Component, AfterViewInit, ElementRef, ViewChild, OnDestroy, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { OlympicService } from '../../core/services/olympic.service'; // Import du service\nimport { Chart } from 'chart.js/auto';\n\n@Component({\n  selector: 'app-country-chart',\n  templateUrl: './country-chart.component.html',\n  styleUrl: './country-chart.component.scss'\n})\nexport class CountryChartComponent implements AfterViewInit, OnDestroy {\n\n  private subscription: Subscription = new Subscription(); \n\n  // Utilisation de ViewChild plus performant que getElementById\n  // @ViewChild('lineChart') lineChartRef!: ElementRef<HTMLCanvasElement>;\n\n  constructor(private olympicService: OlympicService) {} // Ajout de l'injection\n\n  private lineChart!: Chart; // Stocke l’objet Chart.js pour pouvoir le manipuler\n\n  ngAfterViewInit() {\n    this.olympicService.getOlympicData().subscribe(({ labels, data }) => {\n      this.createCountryChart(labels, data); // Passe les données au graphique\n    });\n  }\n\n  // Chart Country page\n  createCountryChart(labels: string[], values: number[]): void {\n    this.lineChart = new Chart(this.lineChartRef.nativeElement, {\n      type: 'line',\n      data: {\n        labels: this.participations.map(p => p.year),\n        datasets: [\n          {\n            label: 'Médailles par année',\n            data: this.participations.map(p => p.medalsCount),\n            borderColor: 'blue',\n            backgroundColor: 'rgba(0, 0, 255, 0.3)',\n            fill: true,\n            tension: 0.4, // Ajoute un effet de courbure\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n      },\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe(); // Désabonnement propre\n    console.log('ChartComponent détruit, abonnement nettoyé.');\n  }\n\n}\n","<p>country-chart works!</p>\n"],"mappings":"AACA,SAASA,YAAY,QAAQ,MAAM;AAEnC,SAASC,KAAK,QAAQ,eAAe;;;AAOrC,OAAM,MAAOC,qBAAqB;EAIhC;EACA;EAEAC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAL1B,KAAAC,YAAY,GAAiB,IAAIL,YAAY,EAAE;EAKF,CAAC,CAAC;EAIvDM,eAAeA,CAAA;IACb,IAAI,CAACF,cAAc,CAACG,cAAc,EAAE,CAACC,SAAS,CAAC,CAAC;MAAEC,MAAM;MAAEC;IAAI,CAAE,KAAI;MAClE,IAAI,CAACC,kBAAkB,CAACF,MAAM,EAAEC,IAAI,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC;EACJ;EAEA;EACAC,kBAAkBA,CAACF,MAAgB,EAAEG,MAAgB;IACnD,IAAI,CAACC,SAAS,GAAG,IAAIZ,KAAK,CAAC,IAAI,CAACa,YAAY,CAACC,aAAa,EAAE;MAC1DC,IAAI,EAAE,MAAM;MACZN,IAAI,EAAE;QACJD,MAAM,EAAE,IAAI,CAACQ,cAAc,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC;QAC5CC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,qBAAqB;UAC5BZ,IAAI,EAAE,IAAI,CAACO,cAAc,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACI,WAAW,CAAC;UACjDC,WAAW,EAAE,MAAM;UACnBC,eAAe,EAAE,sBAAsB;UACvCC,IAAI,EAAE,IAAI;UACVC,OAAO,EAAE,GAAG,CAAE;SACf;OAEJ;MACDC,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE;;KAExB,CAAC;EACJ;EAEAC,WAAWA,CAAA;IACT,IAAI,CAAC1B,YAAY,CAAC2B,WAAW,EAAE,CAAC,CAAC;IACjCC,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;EAC5D;EAAC,QAAAC,CAAA,G;qBA5CUjC,qBAAqB,EAAAkC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAArBtC,qBAAqB;IAAAuC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVlCV,EAAA,CAAAY,cAAA,QAAG;QAAAZ,EAAA,CAAAa,MAAA,2BAAoB;QAAAb,EAAA,CAAAc,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}