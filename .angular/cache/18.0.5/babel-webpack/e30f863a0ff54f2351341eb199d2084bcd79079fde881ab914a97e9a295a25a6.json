{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Subscription, map, tap, filter, switchMap } from 'rxjs';\nlet CountryDetailsComponent = class CountryDetailsComponent {\n  constructor(olympicService, route,\n  // private router: Router,\n  location // Ajout de Location pour revenir √† la page pr√©c√©dente pas forc√©ment √† home\n  ) {\n    this.olympicService = olympicService;\n    this.route = route;\n    this.location = location;\n    // Configuration des donn√©es pour le Line Chart\n    this.lineChartData = {\n      labels: [],\n      // Ann√©es des participations\n      datasets: [{\n        data: [],\n        // Nombre de m√©dailles\n        label: 'M√©dailles',\n        borderColor: '#42A5F5',\n        backgroundColor: 'rgba(66,165,245,0.2)',\n        fill: true\n      }]\n    };\n    // Options du graphique\n    this.lineChartOptions = {\n      responsive: true\n    };\n    // Stocker l'abonnement\n    this.subscription = new Subscription();\n  }\n  ngOnInit() {\n    this.olympicService.getNumberOfParticipations().pipe(tap(numberOfEntries => {\n      this.numberOfEntries = numberOfEntries;\n      console.log(`Nb de participations : ${numberOfEntries}`);\n    }));\n    // R√©cup√®re l'id via la route et le transforme en number\n    this.countryId = Number(this.route.snapshot.params['id']);\n    // Charger les d√©tails du pays et sinon 404\n    this.countryDetails$ = this.olympicService.getOlympicById(this.countryId).pipe(tap(country => {\n      console.log(\"üîç Pays trouv√© :\", country);\n    }));\n    // Calculer le nombre total d'athl√®tes par pays\n    this.numberOfAthletes$ = this.countryDetails$.pipe(map(country => country ? country.participations.reduce((sum, participation) => sum + participation.athleteCount, 0) : 0));\n    // Calculer le nombre total de medailles par pays\n    this.numberOfMedals$ = this.countryDetails$.pipe(map(country => country ? country.participations.reduce((sum, participation) => sum + participation.medalsCount, 0) : 0));\n    // Calculer le nombre total de medailles par pays\n    this.numberOfEntriesForCountry$ = this.countryDetails$.pipe(map(country => country ? country.participations.length : 0));\n    this.countryDetails$.pipe(filter(country => country !== null), switchMap(country => this.olympicService.getCountryDataChart(country))).subscribe(chartData => {\n      debugger;\n      console.log(\"eeeeeeeeeeeeeeeee\");\n      this.lineChartData.labels = chartData.labels;\n      console.log('labels', this.lineChartData.labels);\n      this.lineChartData.datasets[0].data = chartData.data;\n      console.log('datasets', this.lineChartData.datasets);\n    });\n    // Charger les d√©tails du pays\n    // this.countryDetails$!.pipe(\n    //   map((country) => {\n    //     if (country) {\n    //       // Mettre √† jour les donn√©es du graphique avec les participations\n    //       // this.olympicService.getCountryDataChart(label, data:)\n    //       this.lineChartData.labels = country.participations.map(p => p.year.toString()); // Ann√©es\n    //       this.lineChartData.datasets[0].data = country.participations.map(p => p.medalsCount); // M√©dailles\n    //     }\n    //   }))\n  }\n  // Revient √† la page pr√©c√©dente\n  goBack() {\n    this.location.back();\n  }\n  // D√©sabonnement\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    console.log('CountryDetailsComponent d√©truit, abonnement nettoy√©.');\n  }\n};\nCountryDetailsComponent = __decorate([Component({\n  selector: 'app-country-details',\n  templateUrl: './country-details.component.html',\n  styleUrl: './country-details.component.scss'\n})], CountryDetailsComponent);\nexport { CountryDetailsComponent };\n// cr√©er nouveau chart details component\n// cr√©er le chart\n// cr√©er le lien entre home et pays\n// refacto les methodes dans service\n// page 404 => chargement des data se fait plusieurs fois, la premi√®re fois ne fonctionne pas car pas le temps de charger les data","map":{"version":3,"names":["Component","Subscription","map","tap","filter","switchMap","CountryDetailsComponent","constructor","olympicService","route","location","lineChartData","labels","datasets","data","label","borderColor","backgroundColor","fill","lineChartOptions","responsive","subscription","ngOnInit","getNumberOfParticipations","pipe","numberOfEntries","console","log","countryId","Number","snapshot","params","countryDetails$","getOlympicById","country","numberOfAthletes$","participations","reduce","sum","participation","athleteCount","numberOfMedals$","medalsCount","numberOfEntriesForCountry$","length","getCountryDataChart","subscribe","chartData","goBack","back","ngOnDestroy","unsubscribe","__decorate","selector","templateUrl","styleUrl"],"sources":["/Users/elyouzghinajia/devpment/OC/front-app-angular/src/app/pages/country-details/country-details.component.ts"],"sourcesContent":["\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, map, tap, filter, switchMap } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Olympic } from 'src/app/core/models/Olympic';\nimport { OlympicService } from 'src/app/core/services/olympic.service';\n// import { catchError} from 'rxjs/operators';\nimport { ChartData, ChartOptions } from 'chart.js';\n\n@Component({\n  selector: 'app-country-details',\n  templateUrl: './country-details.component.html',\n  styleUrl: './country-details.component.scss'\n})\n\nexport class CountryDetailsComponent implements OnInit, OnDestroy{\n  public olympics$!: Observable<Olympic[]>;\n  public countryId!: number | null;\n  public countryDetails$!: Observable<Olympic | null>;\n  public numberOfEntries!: number; // pour tous les pays\n  public numberOfAthletes$!: Observable<number>;\n  public numberOfMedals$!: Observable<number>;\n  public numberOfEntriesForCountry$!: Observable<number>; // pour un seul pays\n\n  // Configuration des donn√©es pour le Line Chart\n  public lineChartData: ChartData<'line'> = {\n    labels: [], // Ann√©es des participations\n    datasets: [\n      {\n        data: [], // Nombre de m√©dailles\n        label: 'M√©dailles',\n        borderColor: '#42A5F5',\n        backgroundColor: 'rgba(66,165,245,0.2)',\n        fill: true,\n      },\n    ],\n  };\n\n  // Options du graphique\n  public lineChartOptions: ChartOptions<'line'> = {\n    responsive: true,\n  };\n\n  // Stocker l'abonnement\n  private subscription: Subscription = new Subscription(); \n\n  constructor(\n    private olympicService: OlympicService, \n    private route: ActivatedRoute, \n    // private router: Router,\n    private location: Location // Ajout de Location pour revenir √† la page pr√©c√©dente pas forc√©ment √† home\n  ) {}\n\n  ngOnInit(): void {\n    this.olympicService.getNumberOfParticipations().pipe(\n      tap((numberOfEntries: number) => {\n        this.numberOfEntries = numberOfEntries;\n        console.log(`Nb de participations : ${numberOfEntries}`);\n      })\n    );\n\n    // R√©cup√®re l'id via la route et le transforme en number\n    this.countryId = Number(this.route.snapshot.params['id']);\n\n    // Charger les d√©tails du pays et sinon 404\n    this.countryDetails$! = this.olympicService.getOlympicById(this.countryId).pipe(\n      tap(country => {\n        console.log(\"üîç Pays trouv√© :\", country);\n      }),\n      // map(country => {\n      //   if (!country) {\n      //     console.warn(\"‚õî Aucun pays trouv√©, redirection...\");\n      //     this.router.navigate(['/404']); \n      //     return null;\n      //   }\n      //   return country;\n      // })\n    );\n\n    // Calculer le nombre total d'athl√®tes par pays\n    this.numberOfAthletes$ = this.countryDetails$.pipe(\n      map(country => country ? country.participations.reduce((sum, participation) => sum + participation.athleteCount, 0) : 0)\n    );\n\n    // Calculer le nombre total de medailles par pays\n    this.numberOfMedals$ = this.countryDetails$.pipe(\n      map(country => country ? country.participations.reduce((sum, participation) => sum + participation.medalsCount, 0) : 0)\n    );\n\n    // Calculer le nombre total de medailles par pays\n    this.numberOfEntriesForCountry$ = this.countryDetails$.pipe(\n      map(country => country ? country.participations.length : 0)\n    );\n\n    this.countryDetails$.pipe(\n      filter(country => country !== null),\n      switchMap(country => this.olympicService.getCountryDataChart(country!))\n    ).subscribe(chartData => {\n        debugger\n        console.log(\"eeeeeeeeeeeeeeeee\")\n        this.lineChartData.labels = chartData.labels;\n        console.log('labels', this.lineChartData.labels)\n        this.lineChartData.datasets[0].data = chartData.data;\n        console.log('datasets', this.lineChartData.datasets)\n\n      }\n    );\n\n    // Charger les d√©tails du pays\n    // this.countryDetails$!.pipe(\n    //   map((country) => {\n    //     if (country) {\n    //       // Mettre √† jour les donn√©es du graphique avec les participations\n    //       // this.olympicService.getCountryDataChart(label, data:)\n          \n    //       this.lineChartData.labels = country.participations.map(p => p.year.toString()); // Ann√©es\n    //       this.lineChartData.datasets[0].data = country.participations.map(p => p.medalsCount); // M√©dailles\n    //     }\n    //   }))\n  }\n\n  // Revient √† la page pr√©c√©dente\n  goBack(): void {\n    this.location.back(); \n  }\n    \n  // D√©sabonnement\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe(); \n    console.log('CountryDetailsComponent d√©truit, abonnement nettoy√©.');\n  }\n}\n\n\n// cr√©er nouveau chart details component\n// cr√©er le chart\n// cr√©er le lien entre home et pays\n// refacto les methodes dans service\n\n// page 404 => chargement des data se fait plusieurs fois, la premi√®re fois ne fonctionne pas car pas le temps de charger les data"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}